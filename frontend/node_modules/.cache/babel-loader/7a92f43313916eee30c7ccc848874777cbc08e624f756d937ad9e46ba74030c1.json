{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHUPENDRA SAINI\\\\Downloads\\\\video conferencing\\\\frontend\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Peer from \"peerjs\";\nimport VideoPlayer from \"./VideoPlayer\";\nimport { FaMicrophone, FaMicrophoneSlash, FaVideo, FaVideoSlash, FaDesktop, FaStop, FaPhone } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = ({\n  username,\n  onLogout\n}) => {\n  _s();\n  const [myStream, setMyStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [peerIdToCall, setPeerIdToCall] = useState(\"\");\n  const [myPeerId, setMyPeerId] = useState(\"\");\n  const [muted, setMuted] = useState(false);\n  const [videoOff, setVideoOff] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const peerRef = useRef(null);\n  const currentCallRefs = useRef([]); // To track active calls\n  const screenStreamRef = useRef(null); // To handle screen sharing stream\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        // Get initial media stream with audio and video\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setMyStream(stream);\n\n        // Create PeerJS instance with generated ID\n        peerRef.current = new Peer(undefined, {\n          host: process.env.REACT_APP_PEER_SERVER_HOST || 'localhost',\n          port: Number(process.env.REACT_APP_PEER_SERVER_PORT) || 9000,\n          path: process.env.REACT_APP_PEER_SERVER_PATH || '/peerjs'\n        });\n        peerRef.current.on(\"open\", id => {\n          setMyPeerId(id);\n          console.log(\"My peer ID:\", id);\n        });\n        peerRef.current.on(\"call\", call => {\n          // Answer incoming call with local stream\n          call.answer(stream);\n          currentCallRefs.current.push(call);\n\n          // Add remote stream when received\n          call.on(\"stream\", remoteStream => {\n            setRemoteStreams(prev => prev.some(s => s.id === remoteStream.id) ? prev : [...prev, remoteStream]);\n          });\n\n          // Remove stream when call closes\n          call.on(\"close\", () => {\n            setRemoteStreams(prev => prev.filter(s => {\n              var _call$remoteStream;\n              return s.id !== ((_call$remoteStream = call.remoteStream) === null || _call$remoteStream === void 0 ? void 0 : _call$remoteStream.id);\n            }));\n          });\n        });\n        peerRef.current.on(\"error\", err => {\n          console.error(\"Peer error:\", err);\n        });\n      } catch (err) {\n        alert(\"Could not access camera and microphone. Please allow permissions.\");\n      }\n    };\n    init();\n    return () => {\n      // Cleanup on unmount\n      currentCallRefs.current.forEach(call => call.close());\n      setRemoteStreams([]);\n      if (myStream) {\n        myStream.getTracks().forEach(track => track.stop());\n      }\n      if (screenStreamRef.current) {\n        screenStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      peerRef.current && peerRef.current.destroy();\n      peerRef.current = null;\n    };\n  }, []);\n\n  // Mute/unmute audio\n  const toggleMute = () => {\n    if (!myStream) return;\n    myStream.getAudioTracks().forEach(track => {\n      track.enabled = !track.enabled;\n    });\n    setMuted(!muted);\n  };\n\n  // Stop/start video\n  const toggleVideo = () => {\n    if (!myStream) return;\n    myStream.getVideoTracks().forEach(track => {\n      track.enabled = !track.enabled;\n    });\n    setVideoOff(!videoOff);\n  };\n\n  // Start screen sharing\n  const startScreenShare = async () => {\n    if (isScreenSharing) {\n      stopScreenShare();\n      return;\n    }\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: false\n      });\n      screenStreamRef.current = screenStream;\n      setIsScreenSharing(true);\n\n      // Replace video track sender for all active calls\n      currentCallRefs.current.forEach(call => {\n        const sender = call.peerConnection.getSenders().find(s => s.track.kind === \"video\");\n        if (sender) {\n          sender.replaceTrack(screenStream.getVideoTracks()[0]);\n        }\n      });\n\n      // Update local preview stream (audio from camera + screen video)\n      setMyStream(prevStream => {\n        prevStream.getVideoTracks().forEach(track => track.enabled = false);\n        const combinedStream = new MediaStream([...prevStream.getAudioTracks(), ...screenStream.getVideoTracks()]);\n        return combinedStream;\n      });\n\n      // Listen for when screen sharing stops\n      screenStream.getVideoTracks()[0].addEventListener(\"ended\", () => {\n        stopScreenShare();\n      });\n    } catch (error) {\n      console.error(\"Screen sharing failed:\", error);\n      alert(\"Screen sharing was cancelled or failed.\");\n    }\n  };\n\n  // Stop screen sharing and revert back to camera stream\n  const stopScreenShare = async () => {\n    if (screenStreamRef.current) {\n      screenStreamRef.current.getTracks().forEach(track => track.stop());\n      screenStreamRef.current = null;\n    }\n    setIsScreenSharing(false);\n    try {\n      const cameraStream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Replace video and audio senders in all calls\n      currentCallRefs.current.forEach(call => {\n        const videoSender = call.peerConnection.getSenders().find(s => s.track.kind === \"video\");\n        if (videoSender) {\n          videoSender.replaceTrack(cameraStream.getVideoTracks()[0]);\n        }\n        const audioSender = call.peerConnection.getSenders().find(s => s.track.kind === \"audio\");\n        if (audioSender) {\n          audioSender.replaceTrack(cameraStream.getAudioTracks()[0]);\n        }\n      });\n      setMyStream(cameraStream);\n      setMuted(false);\n      setVideoOff(false);\n    } catch (err) {\n      console.error(\"Failed to revert to camera:\", err);\n      alert(\"Could not access camera/audio to stop screen sharing.\");\n    }\n  };\n\n  // Call peer with entered ID\n  const callPeer = () => {\n    if (!peerIdToCall || !myStream || !peerRef.current) return;\n    const call = peerRef.current.call(peerIdToCall, myStream);\n    currentCallRefs.current.push(call);\n    call.on(\"stream\", remoteStream => {\n      setRemoteStreams(prev => prev.some(s => s.id === remoteStream.id) ? prev : [...prev, remoteStream]);\n    });\n    call.on(\"close\", () => {\n      setRemoteStreams(prev => prev.filter(s => {\n        var _call$remoteStream2;\n        return s.id !== ((_call$remoteStream2 = call.remoteStream) === null || _call$remoteStream2 === void 0 ? void 0 : _call$remoteStream2.id);\n      }));\n    });\n    setPeerIdToCall(\"\"); // clear input after call initiation\n  };\n\n  // Leave call / logout and cleanup\n  const leaveCall = () => {\n    currentCallRefs.current.forEach(call => call.close());\n    currentCallRefs.current = [];\n    setRemoteStreams([]);\n    if (myStream) myStream.getTracks().forEach(track => track.stop());\n    setMyStream(null);\n    if (screenStreamRef.current) {\n      screenStreamRef.current.getTracks().forEach(track => track.stop());\n      screenStreamRef.current = null;\n    }\n    if (peerRef.current) {\n      peerRef.current.destroy();\n      peerRef.current = null;\n    }\n    onLogout();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 1000,\n      margin: \"auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Welcome, \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 20\n        }, this), \" | Your Peer ID:\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n          style: {\n            background: \"#eee\",\n            padding: \"2px 6px\",\n            borderRadius: 4\n          },\n          children: myPeerId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leaveCall,\n        title: \"Leave Call\",\n        style: {\n          backgroundColor: \"#ff4b5c\",\n          color: \"white\",\n          border: \"none\",\n          padding: \"8px 18px\",\n          borderRadius: 6,\n          cursor: \"pointer\",\n          fontWeight: \"bold\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FaPhone, {\n          style: {\n            marginRight: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), \"Leave Call\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: 20,\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter peer ID to call\",\n        value: peerIdToCall,\n        onChange: e => setPeerIdToCall(e.target.value),\n        style: {\n          flex: 1,\n          padding: \"8px 12px\",\n          fontSize: 16,\n          borderRadius: 4,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: callPeer,\n        style: {\n          padding: \"8px 16px\",\n          fontSize: 16,\n          backgroundColor: \"#2979ff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 4,\n          cursor: \"pointer\"\n        },\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubbles-container\",\n      children: [myStream && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-bubble you\",\n        children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n          stream: myStream,\n          isMuted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username-badge\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), remoteStreams.map((stream, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n          stream: stream,\n          isMuted: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username-badge\",\n          children: [\"Guest \", idx + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      style: {\n        position: \"fixed\",\n        bottom: 32,\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"#fff\",\n        boxShadow: \"0 2px 18px rgba(0, 0, 0, 0.2)\",\n        padding: \"8px 28px\",\n        borderRadius: 28,\n        display: \"flex\",\n        gap: 24,\n        zIndex: 99\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        title: muted ? \"Unmute Microphone\" : \"Mute Microphone\",\n        onClick: toggleMute,\n        style: {\n          width: 46,\n          height: 46,\n          borderRadius: \"50%\",\n          backgroundColor: muted ? \"#ff4b4b\" : \"#4caf50\",\n          color: \"white\",\n          border: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: 22,\n          cursor: \"pointer\",\n          transition: \"background-color 0.2s ease\"\n        },\n        children: muted ? /*#__PURE__*/_jsxDEV(FaMicrophoneSlash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: videoOff ? \"Start Video\" : \"Stop Video\",\n        onClick: toggleVideo,\n        style: {\n          width: 46,\n          height: 46,\n          borderRadius: \"50%\",\n          backgroundColor: videoOff ? \"#ff4b4b\" : \"#4caf50\",\n          color: \"white\",\n          border: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: 22,\n          cursor: \"pointer\",\n          transition: \"background-color 0.2s ease\"\n        },\n        children: videoOff ? /*#__PURE__*/_jsxDEV(FaVideoSlash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(FaVideo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: isScreenSharing ? \"Stop Screen Share\" : \"Share Screen\",\n        onClick: isScreenSharing ? stopScreenShare : startScreenShare,\n        style: {\n          width: 46,\n          height: 46,\n          borderRadius: \"50%\",\n          backgroundColor: isScreenSharing ? \"#455ede\" : \"#2979ff\",\n          color: \"white\",\n          border: \"none\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: 22,\n          cursor: \"pointer\",\n          transition: \"background-color 0.2s ease\"\n        },\n        children: isScreenSharing ? /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(FaDesktop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"FPYV7eaorMtrnjr0pbBFYCbm3H8=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Peer","VideoPlayer","FaMicrophone","FaMicrophoneSlash","FaVideo","FaVideoSlash","FaDesktop","FaStop","FaPhone","jsxDEV","_jsxDEV","Room","username","onLogout","_s","myStream","setMyStream","remoteStreams","setRemoteStreams","peerIdToCall","setPeerIdToCall","myPeerId","setMyPeerId","muted","setMuted","videoOff","setVideoOff","isScreenSharing","setIsScreenSharing","peerRef","currentCallRefs","screenStreamRef","init","stream","navigator","mediaDevices","getUserMedia","video","audio","current","undefined","host","process","env","REACT_APP_PEER_SERVER_HOST","port","Number","REACT_APP_PEER_SERVER_PORT","path","REACT_APP_PEER_SERVER_PATH","on","id","console","log","call","answer","push","remoteStream","prev","some","s","filter","_call$remoteStream","err","error","alert","forEach","close","getTracks","track","stop","destroy","toggleMute","getAudioTracks","enabled","toggleVideo","getVideoTracks","startScreenShare","stopScreenShare","screenStream","getDisplayMedia","sender","peerConnection","getSenders","find","kind","replaceTrack","prevStream","combinedStream","MediaStream","addEventListener","cameraStream","videoSender","audioSender","callPeer","_call$remoteStream2","leaveCall","style","maxWidth","margin","padding","children","display","justifyContent","alignItems","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","background","borderRadius","onClick","title","backgroundColor","color","border","cursor","fontWeight","marginRight","gap","type","placeholder","value","onChange","e","target","flex","fontSize","className","isMuted","map","idx","position","bottom","left","transform","boxShadow","zIndex","width","height","transition","_c","$RefreshReg$"],"sources":["C:/Users/BHUPENDRA SAINI/Downloads/video conferencing/frontend/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport Peer from \"peerjs\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport { \r\n  FaMicrophone, \r\n  FaMicrophoneSlash, \r\n  FaVideo, \r\n  FaVideoSlash, \r\n  FaDesktop, \r\n  FaStop, \r\n  FaPhone \r\n} from \"react-icons/fa\";\r\n\r\nconst Room = ({ username, onLogout }) => {\r\n  const [myStream, setMyStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [peerIdToCall, setPeerIdToCall] = useState(\"\");\r\n  const [myPeerId, setMyPeerId] = useState(\"\");\r\n  const [muted, setMuted] = useState(false);\r\n  const [videoOff, setVideoOff] = useState(false);\r\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n\r\n  const peerRef = useRef(null);\r\n  const currentCallRefs = useRef([]); // To track active calls\r\n  const screenStreamRef = useRef(null); // To handle screen sharing stream\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        // Get initial media stream with audio and video\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n        setMyStream(stream);\r\n\r\n        // Create PeerJS instance with generated ID\r\n        peerRef.current = new Peer(undefined, {\r\n          host: process.env.REACT_APP_PEER_SERVER_HOST || 'localhost',\r\n          port: Number(process.env.REACT_APP_PEER_SERVER_PORT) || 9000,\r\n          path: process.env.REACT_APP_PEER_SERVER_PATH || '/peerjs',\r\n        });\r\n\r\n        peerRef.current.on(\"open\", (id) => {\r\n          setMyPeerId(id);\r\n          console.log(\"My peer ID:\", id);\r\n        });\r\n\r\n        peerRef.current.on(\"call\", (call) => {\r\n          // Answer incoming call with local stream\r\n          call.answer(stream);\r\n          currentCallRefs.current.push(call);\r\n\r\n          // Add remote stream when received\r\n          call.on(\"stream\", (remoteStream) => {\r\n            setRemoteStreams((prev) =>\r\n              prev.some((s) => s.id === remoteStream.id) ? prev : [...prev, remoteStream]\r\n            );\r\n          });\r\n\r\n          // Remove stream when call closes\r\n          call.on(\"close\", () => {\r\n            setRemoteStreams((prev) => prev.filter((s) => s.id !== call.remoteStream?.id));\r\n          });\r\n        });\r\n\r\n        peerRef.current.on(\"error\", (err) => {\r\n          console.error(\"Peer error:\", err);\r\n        });\r\n      } catch (err) {\r\n        alert(\"Could not access camera and microphone. Please allow permissions.\");\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    return () => {\r\n      // Cleanup on unmount\r\n      currentCallRefs.current.forEach((call) => call.close());\r\n      setRemoteStreams([]);\r\n      if (myStream) {\r\n        myStream.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (screenStreamRef.current) {\r\n        screenStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      }\r\n      peerRef.current && peerRef.current.destroy();\r\n      peerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  // Mute/unmute audio\r\n  const toggleMute = () => {\r\n    if (!myStream) return;\r\n    myStream.getAudioTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n    setMuted(!muted);\r\n  };\r\n\r\n  // Stop/start video\r\n  const toggleVideo = () => {\r\n    if (!myStream) return;\r\n    myStream.getVideoTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n    });\r\n    setVideoOff(!videoOff);\r\n  };\r\n\r\n  // Start screen sharing\r\n  const startScreenShare = async () => {\r\n    if (isScreenSharing) {\r\n      stopScreenShare();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n        audio: false\r\n      });\r\n      screenStreamRef.current = screenStream;\r\n      setIsScreenSharing(true);\r\n\r\n      // Replace video track sender for all active calls\r\n      currentCallRefs.current.forEach((call) => {\r\n        const sender = call.peerConnection.getSenders().find((s) => s.track.kind === \"video\");\r\n        if (sender) {\r\n          sender.replaceTrack(screenStream.getVideoTracks()[0]);\r\n        }\r\n      });\r\n\r\n      // Update local preview stream (audio from camera + screen video)\r\n      setMyStream((prevStream) => {\r\n        prevStream.getVideoTracks().forEach((track) => (track.enabled = false));\r\n        const combinedStream = new MediaStream([\r\n          ...prevStream.getAudioTracks(),\r\n          ...screenStream.getVideoTracks(),\r\n        ]);\r\n        return combinedStream;\r\n      });\r\n\r\n      // Listen for when screen sharing stops\r\n      screenStream.getVideoTracks()[0].addEventListener(\"ended\", () => {\r\n        stopScreenShare();\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Screen sharing failed:\", error);\r\n      alert(\"Screen sharing was cancelled or failed.\");\r\n    }\r\n  };\r\n\r\n  // Stop screen sharing and revert back to camera stream\r\n  const stopScreenShare = async () => {\r\n    if (screenStreamRef.current) {\r\n      screenStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      screenStreamRef.current = null;\r\n    }\r\n    setIsScreenSharing(false);\r\n\r\n    try {\r\n      const cameraStream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      // Replace video and audio senders in all calls\r\n      currentCallRefs.current.forEach((call) => {\r\n        const videoSender = call.peerConnection.getSenders().find((s) => s.track.kind === \"video\");\r\n        if (videoSender) {\r\n          videoSender.replaceTrack(cameraStream.getVideoTracks()[0]);\r\n        }\r\n        const audioSender = call.peerConnection.getSenders().find((s) => s.track.kind === \"audio\");\r\n        if (audioSender) {\r\n          audioSender.replaceTrack(cameraStream.getAudioTracks()[0]);\r\n        }\r\n      });\r\n\r\n      setMyStream(cameraStream);\r\n      setMuted(false);\r\n      setVideoOff(false);\r\n    } catch (err) {\r\n      console.error(\"Failed to revert to camera:\", err);\r\n      alert(\"Could not access camera/audio to stop screen sharing.\");\r\n    }\r\n  };\r\n\r\n  // Call peer with entered ID\r\n  const callPeer = () => {\r\n    if (!peerIdToCall || !myStream || !peerRef.current) return;\r\n\r\n    const call = peerRef.current.call(peerIdToCall, myStream);\r\n    currentCallRefs.current.push(call);\r\n\r\n    call.on(\"stream\", (remoteStream) => {\r\n      setRemoteStreams((prev) =>\r\n        prev.some((s) => s.id === remoteStream.id) ? prev : [...prev, remoteStream]\r\n      );\r\n    });\r\n\r\n    call.on(\"close\", () => {\r\n      setRemoteStreams((prev) => prev.filter((s) => s.id !== call.remoteStream?.id));\r\n    });\r\n\r\n    setPeerIdToCall(\"\"); // clear input after call initiation\r\n  };\r\n\r\n  // Leave call / logout and cleanup\r\n  const leaveCall = () => {\r\n    currentCallRefs.current.forEach((call) => call.close());\r\n    currentCallRefs.current = [];\r\n    setRemoteStreams([]);\r\n    if (myStream) myStream.getTracks().forEach((track) => track.stop());\r\n    setMyStream(null);\r\n\r\n    if (screenStreamRef.current) {\r\n      screenStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      screenStreamRef.current = null;\r\n    }\r\n\r\n    if (peerRef.current) {\r\n      peerRef.current.destroy();\r\n      peerRef.current = null;\r\n    }\r\n\r\n    onLogout();\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 1000, margin: \"auto\", padding: 20 }}>\r\n      {/* Header */}\r\n      <header style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: 20 }}>\r\n        <span>\r\n          Welcome, <b>{username}</b> | Your Peer ID:{\" \"}\r\n          <code style={{ background: \"#eee\", padding: \"2px 6px\", borderRadius: 4 }}>{myPeerId}</code>\r\n        </span>\r\n        <button\r\n          onClick={leaveCall}\r\n          title=\"Leave Call\"\r\n          style={{\r\n            backgroundColor: \"#ff4b5c\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            padding: \"8px 18px\",\r\n            borderRadius: 6,\r\n            cursor: \"pointer\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          <FaPhone style={{ marginRight: 6 }} />\r\n          Leave Call\r\n        </button>\r\n      </header>\r\n\r\n      {/* Call panel */}\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginBottom: 20, gap: 10 }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter peer ID to call\"\r\n          value={peerIdToCall}\r\n          onChange={(e) => setPeerIdToCall(e.target.value)}\r\n          style={{ flex: 1, padding: \"8px 12px\", fontSize: 16, borderRadius: 4, border: \"1px solid #ccc\" }}\r\n        />\r\n        <button\r\n          onClick={callPeer}\r\n          style={{\r\n            padding: \"8px 16px\",\r\n            fontSize: 16,\r\n            backgroundColor: \"#2979ff\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: 4,\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Call\r\n        </button>\r\n      </div>\r\n\r\n      {/* Bubble Video Container */}\r\n      <div className=\"bubbles-container\">\r\n        {myStream && (\r\n          <div className=\"video-bubble you\">\r\n            <VideoPlayer stream={myStream} isMuted={true} />\r\n            <span className=\"username-badge\">You</span>\r\n          </div>\r\n        )}\r\n        {remoteStreams.map((stream, idx) => (\r\n          <div className=\"video-bubble\" key={idx}>\r\n            <VideoPlayer stream={stream} isMuted={false} />\r\n            <span className=\"username-badge\">Guest {idx + 1}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Toolbar */}\r\n      <div\r\n        className=\"toolbar\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: 32,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n          backgroundColor: \"#fff\",\r\n          boxShadow: \"0 2px 18px rgba(0, 0, 0, 0.2)\",\r\n          padding: \"8px 28px\",\r\n          borderRadius: 28,\r\n          display: \"flex\",\r\n          gap: 24,\r\n          zIndex: 99,\r\n        }}\r\n      >\r\n        <button\r\n          title={muted ? \"Unmute Microphone\" : \"Mute Microphone\"}\r\n          onClick={toggleMute}\r\n          style={{\r\n            width: 46,\r\n            height: 46,\r\n            borderRadius: \"50%\",\r\n            backgroundColor: muted ? \"#ff4b4b\" : \"#4caf50\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            fontSize: 22,\r\n            cursor: \"pointer\",\r\n            transition: \"background-color 0.2s ease\",\r\n          }}\r\n        >\r\n          {muted ? <FaMicrophoneSlash /> : <FaMicrophone />}\r\n        </button>\r\n\r\n        <button\r\n          title={videoOff ? \"Start Video\" : \"Stop Video\"}\r\n          onClick={toggleVideo}\r\n          style={{\r\n            width: 46,\r\n            height: 46,\r\n            borderRadius: \"50%\",\r\n            backgroundColor: videoOff ? \"#ff4b4b\" : \"#4caf50\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            fontSize: 22,\r\n            cursor: \"pointer\",\r\n            transition: \"background-color 0.2s ease\",\r\n          }}\r\n        >\r\n          {videoOff ? <FaVideoSlash /> : <FaVideo />}\r\n        </button>\r\n\r\n        <button\r\n          title={isScreenSharing ? \"Stop Screen Share\" : \"Share Screen\"}\r\n          onClick={isScreenSharing ? stopScreenShare : startScreenShare}\r\n          style={{\r\n            width: 46,\r\n            height: 46,\r\n            borderRadius: \"50%\",\r\n            backgroundColor: isScreenSharing ? \"#455ede\" : \"#2979ff\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            fontSize: 22,\r\n            cursor: \"pointer\",\r\n            transition: \"background-color 0.2s ease\",\r\n          }}\r\n        >\r\n          {isScreenSharing ? <FaStop /> : <FaDesktop />}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}